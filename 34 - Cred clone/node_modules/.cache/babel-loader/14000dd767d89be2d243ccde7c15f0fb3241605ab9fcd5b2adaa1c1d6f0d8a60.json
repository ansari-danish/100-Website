{"ast":null,"code":"var _jsxFileName = \"/home/danish/current-project/cred/src/components/MobileScroll/ScreenText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenText = _ref => {\n  _s();\n  let {\n    screen,\n    setCurrentImg,\n    i\n  } = _ref;\n  const [showAnimation, setShowAnimation] = useState(false);\n  const ref = useRef(null);\n  const toggleAnimation = e => {\n    var _e$;\n    if ((_e$ = e[0]) !== null && _e$ !== void 0 && _e$.isIntersecting) setShowAnimation(true);\n    setCurrentImg(i);\n  };\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.6\n  };\n  useEffect(() => {\n    const observer = new IntersectionObserver(toggleAnimation, options);\n    if (!showAnimation) {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    }\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `screen-text ${showAnimation ? \"text-visible\" : \"\"}`,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-heading\",\n      children: screen.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-mockup-wrapper only-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-mockup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-mockup-screen flex absolute-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: screen.mobile_img,\n            className: \"mobile-screen-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-description\",\n      children: screen.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenText, \"b06azCnAd+YgyPbyrRo/D2lcMJE=\");\n_c = ScreenText;\nexport default ScreenText;\nvar _c;\n$RefreshReg$(_c, \"ScreenText\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ScreenText","screen","setCurrentImg","i","showAnimation","setShowAnimation","ref","toggleAnimation","e","isIntersecting","options","root","rootMargin","threshold","observer","IntersectionObserver","current","observe","unobserve","heading","mobile_img","description"],"sources":["/home/danish/current-project/cred/src/components/MobileScroll/ScreenText.js"],"sourcesContent":["import React,{ useState , useRef , useEffect } from 'react'\n\nconst ScreenText = ({ screen, setCurrentImg, i }) => {\n    const [showAnimation, setShowAnimation] = useState(false);\n    const ref = useRef(null);\n    const toggleAnimation = (e) => {\n        if(e[0]?.isIntersecting)\n        setShowAnimation(true);\n        setCurrentImg(i);\n    };\n    const options = {\n        root:null,\n        rootMargin:\"0px\",\n        threshold:0.6,\n    };\n    useEffect(() => {\n        const observer = new IntersectionObserver(toggleAnimation,options);\n        if(!showAnimation){\n            if(ref.current){\n                observer.observe(ref.current);\n            }\n        }\n        return () => {\n            if(ref.current){\n                observer.unobserve(ref.current);\n            }\n        };\n    });\n\n\n  return (\n    <div className={`screen-text ${showAnimation ? \"text-visible\":\"\"}`} ref={ref}>\n        <div className=\"screen-heading\">{screen.heading}</div>\n        <div className='mobile-mockup-wrapper only-mobile'>\n          <div className='mobile-mockup'>\n            <div className='mobile-mockup-screen flex absolute-center'>\n              <img src={screen.mobile_img} className=\"mobile-screen-img\" />\n            </div>\n          </div>\n      </div>\n      <div className=\"screen-description\">{screen.description}</div>\n    </div>\n  )\n}\n\nexport default ScreenText"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAGC,MAAM,EAAGC,SAAS,QAAQ,OAAO;AAAA;AAE3D,MAAMC,UAAU,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAE,CAAC;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMS,GAAG,GAAGR,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMS,eAAe,GAAIC,CAAC,IAAK;IAAA;IAC3B,WAAGA,CAAC,CAAC,CAAC,CAAC,gCAAJ,IAAMC,cAAc,EACvBJ,gBAAgB,CAAC,IAAI,CAAC;IACtBH,aAAa,CAACC,CAAC,CAAC;EACpB,CAAC;EACD,MAAMO,OAAO,GAAG;IACZC,IAAI,EAAC,IAAI;IACTC,UAAU,EAAC,KAAK;IAChBC,SAAS,EAAC;EACd,CAAC;EACDd,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAG,IAAIC,oBAAoB,CAACR,eAAe,EAACG,OAAO,CAAC;IAClE,IAAG,CAACN,aAAa,EAAC;MACd,IAAGE,GAAG,CAACU,OAAO,EAAC;QACXF,QAAQ,CAACG,OAAO,CAACX,GAAG,CAACU,OAAO,CAAC;MACjC;IACJ;IACA,OAAO,MAAM;MACT,IAAGV,GAAG,CAACU,OAAO,EAAC;QACXF,QAAQ,CAACI,SAAS,CAACZ,GAAG,CAACU,OAAO,CAAC;MACnC;IACJ,CAAC;EACL,CAAC,CAAC;EAGJ,oBACE;IAAK,SAAS,EAAG,eAAcZ,aAAa,GAAG,cAAc,GAAC,EAAG,EAAE;IAAC,GAAG,EAAEE,GAAI;IAAA,wBACzE;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAAEL,MAAM,CAACkB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,eACtD;MAAK,SAAS,EAAC,mCAAmC;MAAA,uBAChD;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC5B;UAAK,SAAS,EAAC,2CAA2C;UAAA,uBACxD;YAAK,GAAG,EAAElB,MAAM,CAACmB,UAAW;YAAC,SAAS,EAAC;UAAmB;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACzD;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,oBAAoB;MAAA,UAAEnB,MAAM,CAACoB;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEV,CAAC;AAAA,GAzCKrB,UAAU;AAAA,KAAVA,UAAU;AA2ChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}